#!/usr/bin/env bash
#
# Unified project runner.
# Provides commands for development, testing, building, and deployment.
#
# Commands:
#   start    Start the server (builds CSS once).
#   dev      Start the server with auto-reload and watch for CSS changes.
#   test     Run server tests.
#   build    Build front-end assets.
#   deploy   Show deployment commands.
#   restart  Kill the process on port 3000 and start again.
#   help     Show this help message.

set -euo pipefail

ROOT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$ROOT_DIR"

ACTION="${1:-start}"

# --- Helper Functions ---

usage() {
  echo "Usage: ./run [command]"
  echo
  echo "Commands:"
  echo "  start    Start the server (builds CSS once)."
  echo "  dev      Start server with auto-reload and watch for CSS changes."
  echo "  test     Run server tests."
  echo "  build    Build front-end assets."
  echo "  deploy   Show deployment commands."
  echo "  restart  Kill the process on port 3000 and start again."
  echo "  help     Show this help message."
}

ensure_deps() {
  local dir="$1"
  if [ -f "$dir/package.json" ]; then
    echo "Installing dependencies for $dir..."
    (cd "$dir" && npm install)
  else
    echo "Error: $dir/package.json not found." >&2
    exit 1
  fi
}

build_pongo_css_once() {
  if [ -f "Pongo/package.json" ]; then
    echo "Building Pongo Tailwind CSS..."
    (cd Pongo && npm run build:css:once)
  fi
}

watch_pongo_css_bg() {
  if [ -f "Pongo/package.json" ]; then
    echo "Starting Tailwind CSS watch in background..."
    (cd Pongo && npm run build:css > ../pongo-build.log 2>&1 &)
    echo "CSS watch process started. Log: pongo-build.log"
  fi
}

kill_on_port() {
  local port="$1"
  echo "Checking for process on port $port..."
  if lsof -ti:"$port" > /dev/null; then
    echo "Process found. Attempting to kill..."
    lsof -ti:"$port" | xargs kill -9
    echo "Process on port $port killed."
  else
    echo "No process found on port $port."
  fi
}

# --- Command Logic ---

case "$ACTION" in
  help|-h|--help)
    usage
    ;;

  test)
    ensure_deps "server"
    echo "Running server tests..."
    (cd server && npm test)
    ;;

  build)
    ensure_deps "Pongo"
    build_pongo_css_once
    echo "Build complete."
    ;;

  deploy)
    echo "Build assets first by running: ./run build"
    echo
    echo "DigitalOcean App Platform Commands:"
    echo "  Build: npm ci --prefix server && npm ci --prefix Pongo && npm run build:css:once --prefix Pongo"
    echo "  Run:   npm start --prefix server"
    ;;

  dev)
    ensure_deps "Pongo"
    ensure_deps "server"
    watch_pongo_css_bg
    echo "Starting main server in watch mode..."
    exec bash -lc "cd server && npm run dev"
    ;;

  restart)
    kill_on_port 3000
    ensure_deps "Pongo"
    ensure_deps "server"
    build_pongo_css_once
    echo "Starting main server..."
    exec bash -lc "cd server && npm start"
    ;;

  start)
    if lsof -ti:3000 > /dev/null; then
      echo "Server is already running on port 3000. Use './run restart' to force it."
      exit 0
    fi
    ensure_deps "Pongo"
    ensure_deps "server"
    build_pongo_css_once
    echo "Starting main server..."
    exec bash -lc "cd server && npm start"
    ;;

  *)
    echo "Unknown command: $ACTION"
    usage
    exit 1
    ;;
esac